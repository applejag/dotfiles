# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: home-manager
persistentflags:
  -f=: The home configuration file. Default is '~/.config/nixpkgs/home.nix'.
  -A=: Optional attribute that selects a configuration expression in the configuration file.
  -I=: Add a path to the Nix expression search path.
  --flake=: Use Home Manager configuration at flake-uri. Default is '~/.config/home-manager'.
  -b=: Move existing files to new path rather than fail.
  -v: Verbose output
  -n: Do a dry run, only prints what actions would be taken
  -h, --help: Print this help
  --version: Print the Home Manager version

  # Options passed on to nix-build(1)
  --arg=*: Override inputs passed to home-manager.nix
  --argstr=*: Override inputs passed to home-manager.nix
  --cores=:
  --debug:
  --impure:
  --keep-failed:
  --keep-going:
  -j, --max-jobs=:
  --option=*:
  -L, --print-build-logs:
  --show-trace:
  --no-substitute:
  --substitute:
  --no-out-link: Do not create a symlink to the output path
  --no-write-lock-file:
  --builders=:
  --refresh: Consider all previously downloaded files out-of-date
completion:
  flag:
    f: ["$files(.nix)"]
    I: ["$directories"]
commands:
  - name: help
    description: Print this help

  - name: edit
    description: Open the home configuration in $EDITOR

  - name: option OPTION.NAME
    description: Inspect configuration option named OPTION.NAME.

  - name: build
    description: Build configuration into result directory

  - name: init
    description: "Initializes a configuration in the given directory. Default: '~/.config/home-manager'."
    flags:
      --switch: Immediately activate the generated configuration.
    completion:
      positional:
        - ["$directories"]

  - name: instantiate
    description: Instantiate the configuration and print the resulting derivation

  - name: switch
    description: Build and activate configuration

  - name: generations
    description: List all home environment generations

  - name: remove-generations
    description: Remove indicated generations. Use 'generations' command to find suitable generation numbers.

  - name: expire-generations
    description: Remove generations older than TIMESTAMP.

  - name: packages
    description: List all packages installed in home-manager-path

  - name: news
    description: Show news entries in a pager

  - name: uninstall
    description: Remove Home Manager
